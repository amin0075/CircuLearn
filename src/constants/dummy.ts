import { IBotOrderHistory } from "@src/@types/bot";
import { IAccountStatus } from "@src/@types/account";
import { ISubscription, ISubscriptionInvoice } from "@src/@types/subscription";
import { IExchangeEnum } from "@src/@types/exchnage";
import { INotification } from "@src/@types/notification";
import { IReferralAccounts } from "@src/@types/marketing";

const chartData = [
  {
    name: "Jun",
    value: 4000,
  },
  {
    name: "Feb",
    value: 3000,
  },
  {
    name: "Mar",
    value: 2000,
  },
  {
    name: "Apr",
    value: 2780,
  },
  {
    name: "May",
    value: 1890,
  },
  {
    name: "Jun",
    value: 2390,
  },
  {
    name: "Jul",
    value: 3490,
  },
];

const botOrderHistory: IBotOrderHistory[] = [
  {
    startTime: "2023-01-16T00:30:12.778Z",
    endTime: "2023-01-16T02:23:26.281Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 1492,
    profit: -172.61707160000014,
    direction: "short",
    leverage: 20,
    initialBalance: 1849.3604585001,
  },
  {
    startTime: "2023-01-15T05:00:08.946Z",
    endTime: "2023-01-15T20:00:11.071Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 1427,
    profit: 87.07145850000006,
    direction: "long",
    leverage: 20,
    initialBalance: 1762.2890000001,
  },
  {
    startTime: "2023-01-15T02:30:12.777Z",
    endTime: "2023-01-15T03:30:11.112Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 1478,
    profit: -58.501802,
    direction: "short",
    leverage: 20,
    initialBalance: 1820.7908020001,
  },
  {
    startTime: "2023-01-13T23:00:13.141Z",
    endTime: "2023-01-13T23:30:08.936Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 1540,
    profit: -21.306460799999968,
    direction: "long",
    leverage: 20,
    initialBalance: 1842.0972628001,
  },
  {
    startTime: "2023-01-12T06:00:12.81Z",
    endTime: "2023-01-13T07:21:38.048Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 1465,
    profit: 193.34582264999995,
    direction: "long",
    leverage: 20,
    initialBalance: 1648.7514401501,
  },
  {
    startTime: "2023-01-11T18:44:31.472Z",
    endTime: "2023-01-11T23:30:11.19Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 1619,
    profit: -139.01135503,
    direction: "short",
    leverage: 20,
    initialBalance: 1787.7627951801,
  },
  {
    startTime: "2023-01-10T03:30:11.27Z",
    endTime: "2023-01-11T05:15:43.562Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 1819,
    profit: -184.38710472999992,
    direction: "short",
    leverage: 20,
    initialBalance: 1972.1498999101,
  },
  {
    startTime: "2023-01-09T09:00:13.678Z",
    endTime: "2023-01-10T02:40:08.276Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 1998,
    profit: -221.4970807499999,
    direction: "long",
    leverage: 20,
    initialBalance: 2193.6469806601,
  },
  {
    startTime: "2023-01-09T00:30:10.99Z",
    endTime: "2023-01-09T01:30:09.987Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 1911,
    profit: 133.3977971999998,
    direction: "long",
    leverage: 20,
    initialBalance: 2060.2491834601,
  },
  {
    startTime: "2023-01-07T04:00:10.058Z",
    endTime: "2023-01-08T20:10:51.262Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 2655,
    profit: -709.6320173199997,
    direction: "short",
    leverage: 20,
    initialBalance: 2769.8812007801,
  },
  {
    startTime: "2023-01-06T20:30:11.97Z",
    endTime: "2023-01-06T22:00:11.918Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 2902,
    profit: -295.43157180000026,
    direction: "long",
    leverage: 20,
    initialBalance: 3065.3127725801,
  },
  {
    startTime: "2023-01-06T14:30:11.588Z",
    endTime: "2023-01-06T17:30:10.175Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 2712,
    profit: 317.5244262000001,
    direction: "long",
    leverage: 20,
    initialBalance: 2747.7883463801,
  },
  {
    startTime: "2023-01-05T22:30:09.29Z",
    endTime: "2023-01-06T03:00:10.809Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 2374,
    profit: 201.97739619999993,
    direction: "short",
    leverage: 20,
    initialBalance: 2545.8109501801,
  },
  {
    startTime: "2023-01-05T11:01:29.625Z",
    endTime: "2023-01-05T16:30:11.281Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 2565,
    profit: -253.32118845000014,
    direction: "long",
    leverage: 20,
    initialBalance: 2799.1321386301,
  },
  {
    startTime: "2023-01-05T08:30:08.953Z",
    endTime: "2023-01-05T11:00:22.974Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 2699,
    profit: -158.89216859999988,
    direction: "long",
    leverage: 20,
    initialBalance: 2958.0243072301,
  },
  {
    startTime: "2023-01-05T08:30:08.884Z",
    endTime: "2023-01-05T11:00:23.196Z",
    symbol: "TRXUSDTM",
    baseAsset: "TRX",
    quantity: 2699,
    profit: -158.89216859999988,
    direction: "long",
    leverage: 20,
    initialBalance: 2958.0243072301,
  },
];

const accountChanges: IAccountStatus[] = [
  {
    balance: 53400,
    direction: "long",
    pnl: 25,
    symbol: "BTC/USDT",
    time: new Date().toISOString(),
  },
  {
    balance: 53300,
    direction: "long",
    pnl: -100,
    symbol: "BTC/USDT",
    time: new Date().toISOString(),
  },
  {
    balance: 54000,
    direction: "long",
    pnl: 700,
    symbol: "BTC/USDT",
    time: new Date().toISOString(),
  },
  {
    balance: 52400,
    direction: "long",
    pnl: -1500,
    symbol: "BTC/USDT",
    time: new Date().toISOString(),
  },
  {
    balance: 35000,
    direction: "long",
    pnl: 250,
    symbol: "BTC/USDT",
    time: new Date().toISOString(),
  },
  {
    balance: 12500,
    direction: "long",
    pnl: -380,
    symbol: "BTC/USDT",
    time: new Date().toISOString(),
  },
  {
    balance: 100000,
    direction: "long",
    pnl: 95000,
    symbol: "BTC/USDT",
    time: new Date().toISOString(),
  },
];

const refferedInvoices = [
  {
    name: "amin",
    description: "description",
    outcomeAmount: 25,
    productName: "premium",
    referrerShare: "30",
    updatedAt: new Date().toISOString(),
    discountAmount: 30,
  },
  {
    name: "amin",
    description: "description",
    outcomeAmount: 25,
    productName: "premium",
    referrerShare: "30",
    updatedAt: new Date().toISOString(),
    discountAmount: 30,
  },
  {
    name: "amin",
    description: "description",
    outcomeAmount: 25,
    productName: "premium",
    referrerShare: "30",
    updatedAt: new Date().toISOString(),
    discountAmount: 30,
  },
  {
    name: "amin",
    description: "description",
    outcomeAmount: 25,
    productName: "premium",
    referrerShare: "30",
    updatedAt: new Date().toISOString(),
    discountAmount: 30,
  },
];

const subscriptions: ISubscription[] = [
  {
    id: "63a80140b53a3da8762cf7bf",
    name: 1,
    description: "30 Days,24/7 support,no strings attached",
    available: true,
    needsAdminVerify: true,
    price: 0,
    afterDiscountPrice: 0,
    daysTimeLength: 30,
  },
  {
    id: "63a80132b53a3da8762cf7be",
    name: 2,
    description:
      "30 Days,24/7 support,instant initialization after purchase,no strings attached",
    available: true,
    needsAdminVerify: false,
    price: 100,
    afterDiscountPrice: 70,
    daysTimeLength: 30,
  },
  {
    id: "63a80132b53a3da8762cf7be",
    name: 2,
    description:
      "90 Days,24/7 support,instant initialization after purchase,no strings attached",
    available: true,
    needsAdminVerify: false,
    price: 250,
    afterDiscountPrice: 0,
    daysTimeLength: 90,
  },
  {
    id: "63a80132b53a3da8762cf7be",
    name: 2,
    description:
      "180 Days,24/7 support,instant initialization after purchase,no strings attached",
    available: false,
    needsAdminVerify: false,
    price: 400,
    afterDiscountPrice: 330,
    daysTimeLength: 180,
  },
  {
    id: "63a80132b53a3da8762cf7be",
    name: 2,
    description:
      "365 Days,24/7 support,instant initialization after purchase,no strings attached",
    available: true,
    needsAdminVerify: false,
    price: 700,
    afterDiscountPrice: 660,
    daysTimeLength: 365,
  },
];

const botSettingInfo = [
  "If your subscription type is lite you can only change your exchange data in only 1st to 5th of every month.",
  "if your account is premium or ultimate you can change your exchange data whenever you want but if the bot has a current position, your data will be changed after the position gets finished.",
];

const notificationsList: INotification[] = [
  {
    description:
      "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quis, voluptatum. Odio quaerat quia incidunt officiis aspernatur quae? Blanditiis temporibus, fuga architecto quis perferendis vero eius molestias quidem ducimus, eaque natus praesentium deleniti? Necessitatibus eos ipsam consequuntur nesciunt expedita ducimus voluptatum, doloribus rerum quis veritatis saepe fugiat aliquid, nulla adipisci cum.",
    id: "1",
    name: "alex 2890",
    url: "/images/user-image/1.webp",
  },
  {
    description:
      "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quis, voluptatum. Odio quaerat quia incidunt officiis aspernatur quae? Blanditiis temporibus, fuga architecto quis perferendis vero eius molestias quidem ducimus, eaque natus praesentium deleniti? Necessitatibus eos ipsam consequuntur nesciunt expedita ducimus voluptatum, doloribus rerum quis veritatis saepe fugiat aliquid, nulla adipisci cum.",
    id: "2",
    name: "tanya 2000",
    url: "/images/user-image/2.webp",
  },
  {
    description:
      "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quis, voluptatum. Odio quaerat quia incidunt officiis aspernatur quae? Blanditiis temporibus, fuga architecto quis perferendis vero eius molestias quidem ducimus, eaque natus praesentium deleniti? Necessitatibus eos ipsam consequuntur nesciunt expedita ducimus voluptatum, doloribus rerum quis veritatis saepe fugiat aliquid, nulla adipisci cum.",
    id: "3",
    name: "mirana 320",
    url: "/images/user-image/5.webp",
  },
  {
    description:
      "Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quis, voluptatum. Odio quaerat quia incidunt officiis aspernatur quae? Blanditiis temporibus, fuga architecto quis perferendis vero eius molestias quidem ducimus, eaque natus praesentium deleniti? Necessitatibus eos ipsam consequuntur nesciunt expedita ducimus voluptatum, doloribus rerum quis veritatis saepe fugiat aliquid, nulla adipisci cum.",
    id: "4",
    name: "jaja 310320",
    url: "/images/user-image/7.webp",
  },
];

const subscriptionInvoices: ISubscriptionInvoice[] = [
  {
    priceAmount: 250,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    description: "pay check for june",
    invoiceStatus: "failed",
    invoiceUrl: "/user/payment?status=success&paymentId=peyID_1278876",
    payCurreny: "usdt",
    paymentId: "paymentid_19982478",
  },
  {
    priceAmount: 400,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    description: "pay check for february",
    invoiceStatus: "processing",
    invoiceUrl: "/user/payment?status=failed&paymentId=peyID_123243243876",
    payCurreny: "usdt",
    paymentId: "paymentid_12243535",
  },
  {
    priceAmount: 100,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    description: "pay check for march",
    invoiceStatus: "rejected",
    invoiceUrl: "/user/payment?status=success&paymentId=peyID_12753423523876",
    payCurreny: "btc",
    paymentId: "paymentid_13335678",
  },
  {
    priceAmount: 200,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    description: "pay check for januray",
    invoiceStatus: "sending",
    invoiceUrl: "/user/payment?status=failed&paymentId=peyID_1245867787876",
    payCurreny: "eth",
    paymentId: "paymentid_12124778",
  },
  {
    priceAmount: 320,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    description: "pay check for december",
    invoiceStatus: "waiting",
    invoiceUrl: "/user/payment?status=success&paymentId=peyID_12123465776",
    payCurreny: "btc",
    paymentId: "paymentid_19283878",
  },
  {
    priceAmount: 150,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    description: "pay check for november",
    invoiceStatus: "finished",
    invoiceUrl: "/user/payment?status=failed&paymentId=peyID_127843387348876",
    payCurreny: "usdt",
    paymentId: "paymentid_137464556678",
  },
];

const referralAccounts: IReferralAccounts[] = [
  {
    name: "amin12",
    country: "Iran",
    exhange: 0,
    expireTime: new Date().toISOString(),
    registerDate: new Date().toISOString(),
    subType: 0,
  },
  {
    name: "amin12",
    country: "Iran",
    exhange: 1,
    expireTime: new Date().toISOString(),
    registerDate: new Date().toISOString(),
    subType: 1,
  },
  {
    name: "amin12",
    country: "Iran",
    exhange: 2,
    expireTime: new Date().toISOString(),
    registerDate: new Date().toISOString(),
    subType: 2,
  },
  {
    name: "amin12",
    country: "Iran",
    exhange: 1,
    expireTime: new Date().toISOString(),
    registerDate: new Date().toISOString(),
    subType: 3,
  },
  {
    name: "amin12",
    country: "Iran",
    exhange: 0,
    expireTime: new Date().toISOString(),
    registerDate: new Date().toISOString(),
    subType: 1,
  },
  {
    name: "amin12",
    country: "Iran",
    exhange: 0,
    expireTime: new Date().toISOString(),
    registerDate: new Date().toISOString(),
    subType: 1,
  },
];

const exchanges: IExchangeEnum[] = [0, 1, 2];

export {
  chartData,
  botOrderHistory,
  accountChanges,
  refferedInvoices,
  subscriptions,
  exchanges,
  botSettingInfo,
  notificationsList,
  subscriptionInvoices,
  referralAccounts,
};
